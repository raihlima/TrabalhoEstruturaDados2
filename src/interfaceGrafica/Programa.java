/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaceGrafica;

import algoritmos.AlgoritmoDeputado;
import algoritmos.AlgoritmoInteiro;
import algoritmos.AlgoritmoPartido;
import algoritmos.ListaEncadeada;
import algoritmos.arvores.ArvoreAVL;
import algoritmos.arvores.ArvoreSplay;
import algoritmos.arvores.Chave;
import dados.Relatorio;
import java.awt.CardLayout;
import java.io.*;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import trabalhoed2.Deputado;
import trabalhoed2.Partido;
import trabalhoed2.Recibo;

/**
 *
 * @author Carcara
 */
public class Programa extends javax.swing.JFrame {

    private File arquivo = null;
    private CardLayout cardLayout;
    private ListaEncadeada<Deputado> listaDeputado = new ListaEncadeada<>();
    private ListaEncadeada<Partido> listaPartido = new ListaEncadeada<>();

    /**
     * Creates new form Programa
     */
    public Programa() {
        setExtendedState(MAXIMIZED_BOTH);
        Locale.setDefault(new Locale("pt", "BR"));
        //background.setVisible(true);
        initComponents();
        cardLayout = (CardLayout) jPanelPrincipal.getLayout();
        cardLayout.show(jPanelPrincipal, "inicio");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        grupoTipo = new javax.swing.ButtonGroup();
        grupoAlgoritmo = new javax.swing.ButtonGroup();
        grupoQuantidade = new javax.swing.ButtonGroup();
        grupoMetodo = new javax.swing.ButtonGroup();
        grupoHash = new javax.swing.ButtonGroup();
        grupoHashTipo = new javax.swing.ButtonGroup();
        grupoHashMetodo = new javax.swing.ButtonGroup();
        grupoHashQuantidade = new javax.swing.ButtonGroup();
        botaoDeputadoOrdenacao = new javax.swing.JRadioButton();
        botaoDeputadoOrdenacao2 = new javax.swing.JRadioButton();
        botaoPartidoOrdenacao2 = new javax.swing.JRadioButton();
        grupoArvoreMetodo = new javax.swing.ButtonGroup();
        grupoArvoreLinha = new javax.swing.ButtonGroup();
        grupoArvoreArvores = new javax.swing.ButtonGroup();
        barraStatus = new javax.swing.JPanel();
        nomeArquivoStatus = new javax.swing.JLabel();
        nomeArquivo = new javax.swing.JLabel();
        jPanelPrincipal = new javax.swing.JPanel();
        jPanelOrdenacao = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        valorOrdenacao = new javax.swing.JTextField();
        botaoLinearOrdenacao = new javax.swing.JRadioButton();
        botaoAleatorioOrdenacao = new javax.swing.JRadioButton();
        botaoTudo = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        radioBubble = new javax.swing.JRadioButton();
        radioInsertion = new javax.swing.JRadioButton();
        radioMerge = new javax.swing.JRadioButton();
        radioHeap = new javax.swing.JRadioButton();
        radioShell = new javax.swing.JRadioButton();
        radioQuick3 = new javax.swing.JRadioButton();
        radioQuick1 = new javax.swing.JRadioButton();
        radioQuick2 = new javax.swing.JRadioButton();
        botaoComecar = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        sementesOrdenacao = new javax.swing.JRadioButton();
        jPanelArquivoAberto = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNomeArquivo1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jPanelInicio = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPanelResultado = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        labelQuantidadeDeputado = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        labelDespesasTotais = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDeputados = new javax.swing.JTable();
        jPanelExecutando = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        barraProgresso = new javax.swing.JProgressBar();
        progressoStatus = new javax.swing.JLabel();
        jPanelBusca = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        valorBusca = new javax.swing.JTextField();
        botaoLinearBusca = new javax.swing.JRadioButton();
        botaoAleatorioBusca = new javax.swing.JRadioButton();
        botaoTudo1 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        radioSondagemLinear = new javax.swing.JRadioButton();
        radioSondagemQuadratica = new javax.swing.JRadioButton();
        radioDuploHash = new javax.swing.JRadioButton();
        radioEncadeamentoSeparado = new javax.swing.JRadioButton();
        radioEncadeamentoCoalescido = new javax.swing.JRadioButton();
        botaoComecar1 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jRadioButton5 = new javax.swing.JRadioButton();
        radioBuscaSemente = new javax.swing.JRadioButton();
        jPanelRelatorioOrdenacao = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        radioRelatorioOrdenacaoDeputadoCustomizado = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaRelatorioOrdenacao = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanelBuscaACII = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jTextValorN = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jPanelResultadoASCII = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        valorN = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaDeputadoMaiorGasto = new javax.swing.JTable();
        jPanel333 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaDeputadoMenorGasto = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaPartidoMaiorGasto = new javax.swing.JTable();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelaPartidoMenorGasto = new javax.swing.JTable();
        jPanel25 = new javax.swing.JPanel();
        valorTotalGasto = new javax.swing.JLabel();
        jPanelParteTrabalho = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jLabelNomeArquivo2 = new javax.swing.JLabel();
        jPanelParte2 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabelNomeArquivo3 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jPanelArvore = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        valorArvores = new javax.swing.JTextField();
        botaoLinearArvore = new javax.swing.JRadioButton();
        botaoAleatorioArvore = new javax.swing.JRadioButton();
        botaoTudo2 = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        radioArvoreAVL = new javax.swing.JRadioButton();
        radioArvoreVermelhoPreto = new javax.swing.JRadioButton();
        radioArvoreSplay = new javax.swing.JRadioButton();
        radioArvoreB = new javax.swing.JRadioButton();
        radioQuick6 = new javax.swing.JRadioButton();
        botaoComecar2 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        radioArvoreCustomizado = new javax.swing.JRadioButton();
        sementesArvores = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuArquivoAbrir = new javax.swing.JMenuItem();
        menuArquivoFechar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuArquivoSair = new javax.swing.JMenuItem();
        menuAlgoritmos = new javax.swing.JMenu();
        menuOrdenacao = new javax.swing.JMenuItem();
        menuBusca = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuRelatorio = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Abrir");

        grupoTipo.add(botaoDeputadoOrdenacao);
        botaoDeputadoOrdenacao.setSelected(true);
        botaoDeputadoOrdenacao.setText("Deputado");

        grupoHashTipo.add(botaoDeputadoOrdenacao2);
        botaoDeputadoOrdenacao2.setSelected(true);
        botaoDeputadoOrdenacao2.setText("Deputado");
        botaoDeputadoOrdenacao2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeputadoOrdenacao2ActionPerformed(evt);
            }
        });

        grupoHashTipo.add(botaoPartidoOrdenacao2);
        botaoPartidoOrdenacao2.setText("Partido");
        botaoPartidoOrdenacao2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPartidoOrdenacao2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Capivara APP");

        barraStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        nomeArquivoStatus.setText("Nenhum arquivo aberto");

        javax.swing.GroupLayout barraStatusLayout = new javax.swing.GroupLayout(barraStatus);
        barraStatus.setLayout(barraStatusLayout);
        barraStatusLayout.setHorizontalGroup(
            barraStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barraStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nomeArquivoStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        barraStatusLayout.setVerticalGroup(
            barraStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraStatusLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(barraStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomeArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nomeArquivoStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)))
        );

        jPanelPrincipal.setBackground(new java.awt.Color(16, 40, 143));
        jPanelPrincipal.setLayout(new java.awt.CardLayout());

        jPanelOrdenacao.setBackground(new java.awt.Color(33, 39, 132));

        jPanel5.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Leitura de Linhas"));

        valorOrdenacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorOrdenacaoActionPerformed(evt);
            }
        });

        grupoQuantidade.add(botaoLinearOrdenacao);
        botaoLinearOrdenacao.setText("Linear");

        grupoQuantidade.add(botaoAleatorioOrdenacao);
        botaoAleatorioOrdenacao.setText("Aleatórias");

        botaoTudo.setText("Todas as linhas");
        botaoTudo.setToolTipText("Pode demorar um pouco para analizar a quantidade total.");
        botaoTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoTudoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(botaoLinearOrdenacao)
                        .addGap(43, 43, 43)
                        .addComponent(botaoAleatorioOrdenacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(valorOrdenacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoTudo, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoLinearOrdenacao)
                    .addComponent(botaoAleatorioOrdenacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoTudo)
                    .addComponent(valorOrdenacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Algoritmo de Ordenação"));

        grupoAlgoritmo.add(radioBubble);
        radioBubble.setText("Bubble Sort");

        grupoAlgoritmo.add(radioInsertion);
        radioInsertion.setText("Insertion Sort");

        grupoAlgoritmo.add(radioMerge);
        radioMerge.setText("Merge Sort");

        grupoAlgoritmo.add(radioHeap);
        radioHeap.setText("Heap Sort");

        grupoAlgoritmo.add(radioShell);
        radioShell.setText("Shell Sort");

        grupoAlgoritmo.add(radioQuick3);
        radioQuick3.setText("Quick Sort Inserção");

        grupoAlgoritmo.add(radioQuick1);
        radioQuick1.setText("Quick Sort Recursivo");

        grupoAlgoritmo.add(radioQuick2);
        radioQuick2.setText("Quick Sort Mediana");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioBubble)
                    .addComponent(radioInsertion)
                    .addComponent(radioMerge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioQuick3)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioQuick2)
                            .addComponent(radioQuick1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioHeap)
                            .addComponent(radioShell))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioBubble)
                    .addComponent(radioHeap)
                    .addComponent(radioQuick1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioInsertion)
                        .addComponent(radioQuick2))
                    .addComponent(radioShell))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioMerge)
                    .addComponent(radioQuick3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoComecar.setText("Começar");
        botaoComecar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoComecarActionPerformed(evt);
            }
        });

        jButton11.setText("Cancelar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Método"));

        grupoMetodo.add(jRadioButton3);
        jRadioButton3.setText("Customizado");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        grupoMetodo.add(sementesOrdenacao);
        sementesOrdenacao.setText("Sementes Aleatórias ( 10 vezes)");
        sementesOrdenacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sementesOrdenacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sementesOrdenacao)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(sementesOrdenacao))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoComecar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(botaoComecar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelOrdenacaoLayout = new javax.swing.GroupLayout(jPanelOrdenacao);
        jPanelOrdenacao.setLayout(jPanelOrdenacaoLayout);
        jPanelOrdenacaoLayout.setHorizontalGroup(
            jPanelOrdenacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdenacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOrdenacaoLayout.setVerticalGroup(
            jPanelOrdenacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdenacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelOrdenacao, "ordenacao");

        jPanelArquivoAberto.setBackground(new java.awt.Color(33, 39, 132));

        jPanel3.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do Arquivo"));

        jLabelNomeArquivo1.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNomeArquivo1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelNomeArquivo1)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu Rápido"));

        jButton4.setText("Abrir Outro Arquivo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Fechar Arquivo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Relatório Ordenação Deputado");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("Ordenar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Busca");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton7.setText("Busca ASCII");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton29.setText("Voltar");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton29, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton29)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelArquivoAbertoLayout = new javax.swing.GroupLayout(jPanelArquivoAberto);
        jPanelArquivoAberto.setLayout(jPanelArquivoAbertoLayout);
        jPanelArquivoAbertoLayout.setHorizontalGroup(
            jPanelArquivoAbertoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelArquivoAbertoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelArquivoAbertoLayout.setVerticalGroup(
            jPanelArquivoAbertoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelArquivoAbertoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelArquivoAberto, "arquivoAberto");

        jPanelInicio.setBackground(new java.awt.Color(33, 39, 132));

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel2.setMaximumSize(new java.awt.Dimension(600, 600));
        jPanel2.setName(""); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Menu rápido");

        jButton1.setText("Abrir Arquivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Relatório Ordenação Deputados");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Relatório Ordenação Partido");

        jButton17.setText("Relatório Busca Deputados");

        jButton18.setText("Relatório Busca Partido");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17)
                    .addComponent(jButton18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelInicioLayout = new javax.swing.GroupLayout(jPanelInicio);
        jPanelInicio.setLayout(jPanelInicioLayout);
        jPanelInicioLayout.setHorizontalGroup(
            jPanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInicioLayout.createSequentialGroup()
                .addContainerGap(402, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(402, Short.MAX_VALUE))
        );
        jPanelInicioLayout.setVerticalGroup(
            jPanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInicioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelInicio, "inicio");

        jPanelResultado.setBackground(new java.awt.Color(33, 39, 132));

        jButton10.setText("Sair");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Quantidade de Deputados"));

        labelQuantidadeDeputado.setText("aaaaaaa");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelQuantidadeDeputado)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelQuantidadeDeputado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Despesas totais"));

        labelDespesasTotais.setText("jLabel4");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDespesasTotais)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelDespesasTotais)
                .addContainerGap())
        );

        tabelaDeputados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Partido", "Gasto (R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDeputados.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tabelaDeputados);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelResultadoLayout = new javax.swing.GroupLayout(jPanelResultado);
        jPanelResultado.setLayout(jPanelResultadoLayout);
        jPanelResultadoLayout.setHorizontalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelResultadoLayout.setVerticalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelResultado, "resultadoOrdenacao");

        jPanelExecutando.setBackground(new java.awt.Color(33, 39, 132));

        jPanel13.setBorder(new javax.swing.border.MatteBorder(null));

        progressoStatus.setText("jLabel5");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(progressoStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressoStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelExecutandoLayout = new javax.swing.GroupLayout(jPanelExecutando);
        jPanelExecutando.setLayout(jPanelExecutandoLayout);
        jPanelExecutandoLayout.setHorizontalGroup(
            jPanelExecutandoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelExecutandoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelExecutandoLayout.setVerticalGroup(
            jPanelExecutandoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelExecutandoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelExecutando, "execucao");

        jPanelBusca.setBackground(new java.awt.Color(33, 39, 132));

        jPanel14.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Leitura de Linhas"));

        valorBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorBuscaActionPerformed(evt);
            }
        });

        grupoHashQuantidade.add(botaoLinearBusca);
        botaoLinearBusca.setSelected(true);
        botaoLinearBusca.setText("Linear");
        botaoLinearBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLinearBuscaActionPerformed(evt);
            }
        });

        grupoHashQuantidade.add(botaoAleatorioBusca);
        botaoAleatorioBusca.setText("Aleatórias");
        botaoAleatorioBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAleatorioBuscaActionPerformed(evt);
            }
        });

        botaoTudo1.setText("Todas as linhas");
        botaoTudo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoTudo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(botaoLinearBusca)
                        .addGap(45, 45, 45)
                        .addComponent(botaoAleatorioBusca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(valorBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoTudo1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoLinearBusca)
                    .addComponent(botaoAleatorioBusca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoTudo1)
                    .addComponent(valorBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Algoritmo de Busca"));

        grupoHash.add(radioSondagemLinear);
        radioSondagemLinear.setSelected(true);
        radioSondagemLinear.setText("Sondagem Linear");

        grupoHash.add(radioSondagemQuadratica);
        radioSondagemQuadratica.setText("Sondagem Quadrática");

        grupoHash.add(radioDuploHash);
        radioDuploHash.setText("Duplo Hash");

        grupoHash.add(radioEncadeamentoSeparado);
        radioEncadeamentoSeparado.setText("Encadeamento Separado");

        grupoHash.add(radioEncadeamentoCoalescido);
        radioEncadeamentoCoalescido.setText("Encadeamento Coalescido (Sem porão)");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(radioSondagemLinear)
                    .addComponent(radioSondagemQuadratica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioDuploHash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(radioEncadeamentoCoalescido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioEncadeamentoSeparado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSondagemLinear)
                    .addComponent(radioEncadeamentoSeparado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSondagemQuadratica)
                    .addComponent(radioEncadeamentoCoalescido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDuploHash)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoComecar1.setText("Começar");
        botaoComecar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoComecar1ActionPerformed(evt);
            }
        });

        jButton14.setText("Cancelar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Método"));

        grupoHashMetodo.add(jRadioButton5);
        jRadioButton5.setSelected(true);
        jRadioButton5.setText("Customizado");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        grupoHashMetodo.add(radioBuscaSemente);
        radioBuscaSemente.setText("Sementes Aleatórias (10 vezes)");
        radioBuscaSemente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBuscaSementeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioBuscaSemente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton5)
                    .addComponent(radioBuscaSemente))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoComecar1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(botaoComecar1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelBuscaLayout = new javax.swing.GroupLayout(jPanelBusca);
        jPanelBusca.setLayout(jPanelBuscaLayout);
        jPanelBuscaLayout.setHorizontalGroup(
            jPanelBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBuscaLayout.setVerticalGroup(
            jPanelBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelBusca, "busca");

        jPanelRelatorioOrdenacao.setBackground(new java.awt.Color(33, 39, 132));

        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Método"));

        radioRelatorioOrdenacaoDeputadoCustomizado.setText("Customizado");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioRelatorioOrdenacaoDeputadoCustomizado)
                .addContainerGap(326, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(radioRelatorioOrdenacaoDeputadoCustomizado)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        tabelaRelatorioOrdenacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Método", "Data Exec", "Hora Exec", "Tempo Leitura Arq", "Linhas Lidas", "Tempo Ordenação", "Interações", "Memória Gasta", "Algoritmo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaRelatorioOrdenacao);

        jButton16.setText("Sair");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton15.setText("Começar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton16)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelRelatorioOrdenacaoLayout = new javax.swing.GroupLayout(jPanelRelatorioOrdenacao);
        jPanelRelatorioOrdenacao.setLayout(jPanelRelatorioOrdenacaoLayout);
        jPanelRelatorioOrdenacaoLayout.setHorizontalGroup(
            jPanelRelatorioOrdenacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRelatorioOrdenacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelRelatorioOrdenacaoLayout.setVerticalGroup(
            jPanelRelatorioOrdenacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRelatorioOrdenacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelRelatorioOrdenacao, "relatorioOrdenacao");

        jPanelBuscaACII.setBackground(new java.awt.Color(33, 39, 132));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Valor de N"));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextValorN)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jTextValorN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jButton13.setText("Começar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton13)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelBuscaACIILayout = new javax.swing.GroupLayout(jPanelBuscaACII);
        jPanelBuscaACII.setLayout(jPanelBuscaACIILayout);
        jPanelBuscaACIILayout.setHorizontalGroup(
            jPanelBuscaACIILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBuscaACIILayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBuscaACIILayout.setVerticalGroup(
            jPanelBuscaACIILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscaACIILayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelBuscaACII, "buscaACII");

        jPanelResultadoASCII.setBackground(new java.awt.Color(33, 39, 132));

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Valor de N"));

        valorN.setText("jLabel3");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valorN)
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(valorN)
                .addContainerGap())
        );

        jButton19.setText("Sair");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder("Deputados com Menores Gastos"));

        tabelaDeputadoMaiorGasto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Partido", "Gasto R$"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabelaDeputadoMaiorGasto);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel333.setBorder(javax.swing.BorderFactory.createTitledBorder("Deputados com Maiores Gastos"));

        tabelaDeputadoMenorGasto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Partido", "Gasto R$"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabelaDeputadoMenorGasto);

        javax.swing.GroupLayout jPanel333Layout = new javax.swing.GroupLayout(jPanel333);
        jPanel333.setLayout(jPanel333Layout);
        jPanel333Layout.setHorizontalGroup(
            jPanel333Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel333Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel333Layout.setVerticalGroup(
            jPanel333Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel333Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder("Partidos com Menores Gastos"));

        tabelaPartidoMaiorGasto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Partido", "Gasto R$"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabelaPartidoMaiorGasto);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder("Partidos com Menor Gasto"));

        tabelaPartidoMenorGasto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Partido", "Gasto R$"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tabelaPartidoMenorGasto);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Gastos totais"));

        valorTotalGasto.setText("jLabel3");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valorTotalGasto)
                .addContainerGap(458, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(valorTotalGasto)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel333, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(12, 12, 12))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel333, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton19)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelResultadoASCIILayout = new javax.swing.GroupLayout(jPanelResultadoASCII);
        jPanelResultadoASCII.setLayout(jPanelResultadoASCIILayout);
        jPanelResultadoASCIILayout.setHorizontalGroup(
            jPanelResultadoASCIILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoASCIILayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelResultadoASCIILayout.setVerticalGroup(
            jPanelResultadoASCIILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultadoASCIILayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelResultadoASCII, "resultadoASCII");

        jPanelParteTrabalho.setBackground(new java.awt.Color(33, 39, 132));

        jPanel21.setBorder(new javax.swing.border.MatteBorder(null));

        jButton12.setText("Parte 1 (Ordenação e Hash)");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton20.setText("Parte 2 (Árvores)");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Abrir Outro Arquivo");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("Fechar Arquivo");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do Arquivo"));

        jLabelNomeArquivo2.setText("jLabel2");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNomeArquivo2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelNomeArquivo2)
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton21)
                    .addComponent(jButton22))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelParteTrabalhoLayout = new javax.swing.GroupLayout(jPanelParteTrabalho);
        jPanelParteTrabalho.setLayout(jPanelParteTrabalhoLayout);
        jPanelParteTrabalhoLayout.setHorizontalGroup(
            jPanelParteTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParteTrabalhoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelParteTrabalhoLayout.setVerticalGroup(
            jPanelParteTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParteTrabalhoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelParteTrabalho, "parteTrabalho");

        jPanelParte2.setBackground(new java.awt.Color(33, 39, 132));

        jPanel29.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do Arquivo"));

        jLabelNomeArquivo3.setText("jLabel2");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNomeArquivo3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelNomeArquivo3)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu Rápido"));

        jButton23.setText("Construir Árvores");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("Voltar");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addComponent(jButton23)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelParte2Layout = new javax.swing.GroupLayout(jPanelParte2);
        jPanelParte2.setLayout(jPanelParte2Layout);
        jPanelParte2Layout.setHorizontalGroup(
            jPanelParte2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParte2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelParte2Layout.setVerticalGroup(
            jPanelParte2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParte2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelParte2, "parte2");

        jPanelArvore.setBackground(new java.awt.Color(33, 39, 132));

        jPanel30.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Leitura de Linhas"));

        valorArvores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorArvoresActionPerformed(evt);
            }
        });

        grupoArvoreLinha.add(botaoLinearArvore);
        botaoLinearArvore.setSelected(true);
        botaoLinearArvore.setText("Linear");

        grupoArvoreLinha.add(botaoAleatorioArvore);
        botaoAleatorioArvore.setText("Aleatórias");

        botaoTudo2.setText("Todas as linhas");
        botaoTudo2.setToolTipText("Pode demorar um pouco para analizar a quantidade total.");
        botaoTudo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoTudo2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(botaoLinearArvore)
                        .addGap(43, 43, 43)
                        .addComponent(botaoAleatorioArvore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(valorArvores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoTudo2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoLinearArvore)
                    .addComponent(botaoAleatorioArvore))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoTudo2)
                    .addComponent(valorArvores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder("Árvores"));

        grupoArvoreArvores.add(radioArvoreAVL);
        radioArvoreAVL.setSelected(true);
        radioArvoreAVL.setText("Árvore AVL");

        grupoArvoreArvores.add(radioArvoreVermelhoPreto);
        radioArvoreVermelhoPreto.setText("Árvore Vermelho e Preto");

        grupoArvoreArvores.add(radioArvoreSplay);
        radioArvoreSplay.setText("Árvore Splay");

        grupoArvoreArvores.add(radioArvoreB);
        radioArvoreB.setText("Árvore B");

        grupoArvoreArvores.add(radioQuick6);
        radioQuick6.setText("Minha Árvore");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioArvoreAVL)
                    .addComponent(radioArvoreVermelhoPreto)
                    .addComponent(radioArvoreSplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioQuick6)
                    .addComponent(radioArvoreB))
                .addGap(47, 47, 47))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioArvoreAVL)
                    .addComponent(radioArvoreB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioArvoreVermelhoPreto)
                    .addComponent(radioQuick6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioArvoreSplay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoComecar2.setText("Começar");
        botaoComecar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoComecar2ActionPerformed(evt);
            }
        });

        jButton28.setText("Cancelar");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder("Método"));

        grupoArvoreMetodo.add(radioArvoreCustomizado);
        radioArvoreCustomizado.setSelected(true);
        radioArvoreCustomizado.setText("Customizado");
        radioArvoreCustomizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioArvoreCustomizadoActionPerformed(evt);
            }
        });

        grupoArvoreMetodo.add(sementesArvores);
        sementesArvores.setText("Sementes Aleatórias ( 10 vezes)");
        sementesArvores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sementesArvoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioArvoreCustomizado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sementesArvores)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioArvoreCustomizado)
                    .addComponent(sementesArvores))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoComecar2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton28)
                    .addComponent(botaoComecar2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelArvoreLayout = new javax.swing.GroupLayout(jPanelArvore);
        jPanelArvore.setLayout(jPanelArvoreLayout);
        jPanelArvoreLayout.setHorizontalGroup(
            jPanelArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArvoreLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelArvoreLayout.setVerticalGroup(
            jPanelArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArvoreLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelArvore, "arvore");

        menuArquivo.setText("Arquivo");

        menuArquivoAbrir.setText("Abrir Arquivo");
        menuArquivoAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuArquivoAbrirActionPerformed(evt);
            }
        });
        menuArquivo.add(menuArquivoAbrir);

        menuArquivoFechar.setText("Fechar Arquivo");
        menuArquivoFechar.setEnabled(false);
        menuArquivoFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuArquivoFecharActionPerformed(evt);
            }
        });
        menuArquivo.add(menuArquivoFechar);
        menuArquivo.add(jSeparator1);

        menuArquivoSair.setText("Sair");
        menuArquivoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuArquivoSairActionPerformed(evt);
            }
        });
        menuArquivo.add(menuArquivoSair);

        jMenuBar1.add(menuArquivo);

        menuAlgoritmos.setText("Algoritmos");
        menuAlgoritmos.setEnabled(false);

        menuOrdenacao.setText("Ordenação");
        menuOrdenacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOrdenacaoActionPerformed(evt);
            }
        });
        menuAlgoritmos.add(menuOrdenacao);

        menuBusca.setText("Busca (Hash)");
        menuBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscaActionPerformed(evt);
            }
        });
        menuAlgoritmos.add(menuBusca);
        menuAlgoritmos.add(jSeparator2);

        jMenuItem1.setText("Árvores");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAlgoritmos.add(jMenuItem1);

        jMenuBar1.add(menuAlgoritmos);

        menuRelatorio.setText("Relatórios");

        jMenuItem15.setText("Relatório Ordenação");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        menuRelatorio.add(jMenuItem15);

        jMenuBar1.add(menuRelatorio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(barraStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuArquivoAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArquivoAbrirActionPerformed
        // TODO add your handling code here:
        abrirArquivo();

    }//GEN-LAST:event_menuArquivoAbrirActionPerformed

    private void menuArquivoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArquivoSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuArquivoSairActionPerformed

    private void menuArquivoFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArquivoFecharActionPerformed
        // TODO add your handling code here:
        this.arquivo = null;
        desativaMenu();
    }//GEN-LAST:event_menuArquivoFecharActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) jPanelPrincipal.getLayout();
        c1.show(jPanelPrincipal, "card2");
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.arquivo = null;
        desativaMenu();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        abrirArquivo();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        abrirArquivo();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "ordenacao");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arquivoAberto");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void sementesOrdenacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sementesOrdenacaoActionPerformed
        // TODO add your handling code here:

        alteraEstadoOrdenacao(false);
    }//GEN-LAST:event_sementesOrdenacaoActionPerformed

    private void botaoComecarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoComecarActionPerformed
        // TODO add your handling code here:
        if (sementesOrdenacao.isSelected()) {
            try {
                JOptionPane.showMessageDialog(null, "A ordenação será executada.\n O programa poderá ficar travado até o termino da execução", "Info", JOptionPane.INFORMATION_MESSAGE);
                executarSementesOrdenacao();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                int qtdLinhas = Integer.parseInt(valorOrdenacao.getText());

                if (qtdLinhas < 1) {
                    JOptionPane.showMessageDialog(null, "Digite um valor válido!", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {

                    if (qtdLinhas > 500000) {
                        int resposta = JOptionPane.showConfirmDialog(null, "Acima de 500000 linhas pode ocorrer erros por falta de memória.\nTem certeza que deseja executar?", "Confirmação", JOptionPane.YES_NO_OPTION);
                        if (resposta == JOptionPane.YES_OPTION) {
                            JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                            executarOrdenacao(qtdLinhas);
                        } else {

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        //jPanelPrincipal.revalidate();
                        //progressoStatus.setText("Lendo o arquivo");
                        executarOrdenacao(qtdLinhas);

                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Digite um valor válido!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botaoComecarActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        alteraEstadoOrdenacao(true);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arquivoAberto");
        listaDeputado = new ListaEncadeada<Deputado>();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void valorOrdenacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorOrdenacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorOrdenacaoActionPerformed

    private void menuOrdenacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOrdenacaoActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "ordenacao");
    }//GEN-LAST:event_menuOrdenacaoActionPerformed

    private void menuBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscaActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "busca");
    }//GEN-LAST:event_menuBuscaActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "busca");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void botaoDeputadoOrdenacao2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeputadoOrdenacao2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoDeputadoOrdenacao2ActionPerformed

    private void botaoPartidoOrdenacao2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPartidoOrdenacao2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoPartidoOrdenacao2ActionPerformed

    private void valorBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorBuscaActionPerformed

    private void botaoLinearBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLinearBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoLinearBuscaActionPerformed

    private void botaoAleatorioBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAleatorioBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoAleatorioBuscaActionPerformed

    private void botaoComecar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoComecar1ActionPerformed
        // TODO add your handling code here:
        if (radioBuscaSemente.isSelected()) {
            try {
                JOptionPane.showMessageDialog(null, "A ordenação será executada.\n O programa poderá ficar travado até o termino da execução", "Info", JOptionPane.INFORMATION_MESSAGE);
                executarBuscaSementesDeputado();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao Iniciar.\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                int qtdLinhas = Integer.parseInt(valorBusca.getText());

                if (qtdLinhas < 1) {
                    JOptionPane.showMessageDialog(null, "Digite um valor válido!", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {

                    if (qtdLinhas > 500000) {
                        int resposta = JOptionPane.showConfirmDialog(null, "Acima de 500000 linhas pode ocorrer erros por falta de memória.\nTem certeza que deseja executar?", "Confirmação", JOptionPane.YES_NO_OPTION);
                        if (resposta == JOptionPane.YES_OPTION) {
                            JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                            executarHash(qtdLinhas);
                        } else {

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        executarHash(qtdLinhas);

                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Digite um valor válido!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botaoComecar1ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arquivoAberto");
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
        alteraBloqueioBusca(true);
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void radioBuscaSementeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBuscaSementeActionPerformed
        // TODO add your handling code here:
        alteraBloqueioBusca(false);
    }//GEN-LAST:event_radioBuscaSementeActionPerformed

    public void alteraBloqueioBusca(boolean valor) {
        radioSondagemLinear.setEnabled(valor);
        radioSondagemQuadratica.setEnabled(valor);
        radioDuploHash.setEnabled(valor);
        radioEncadeamentoCoalescido.setEnabled(valor);
        radioEncadeamentoSeparado.setEnabled(valor);
        botaoLinearBusca.setEnabled(valor);
        botaoAleatorioBusca.setEnabled(valor);
        botaoTudo1.setEnabled(valor);
        valorBusca.setEnabled(valor);
    }
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if (arquivo != null) {
            cardLayout.show(jPanelPrincipal, "arquivoAberto");
        } else {
            cardLayout.show(jPanelPrincipal, "inicio");
        }

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tabelaRelatorioOrdenacao.getModel();
        modelo.setRowCount(0);
        cardLayout.show(jPanelPrincipal, "relatorioOrdenacao");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tabelaRelatorioOrdenacao.getModel();
        modelo.setRowCount(0);
        if (radioRelatorioOrdenacaoDeputadoCustomizado.isSelected()) {

            try (FileInputStream fi = new FileInputStream("Relatorios/Deputados/OrdenacaoCustomizado.txt")) {
                BufferedInputStream bis = new BufferedInputStream(fi);
                BufferedReader reader = new BufferedReader(new InputStreamReader(bis));
                String linha = reader.readLine();

                //Saber a quantidade de linhas          
                //String
                String[] partes;
                String aux;
                while ((linha = reader.readLine()) != null) {
                    partes = linha.split(";");
                    modelo.addRow(new Object[]{partes[0], partes[1], partes[2], partes[6], partes[8], partes[7], "implementar", partes[7], partes[9]});
                }

                //modelo.addRow(new Object[]{listaDeputado.retornaInfo(i).getNome(), listaDeputado.retornaInfo(i).getPartido(), df.format(listaDeputado.retornaInfo(i).getTotalGasto())});
                fi.close();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Não existe relatórios!", "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {

            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "relatorioOrdenacao");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botaoTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoTudoActionPerformed
        // TODO add your handling code here:
        LineNumberReader linhaLeitura;
        try {
            linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int valor = linhaLeitura.getLineNumber();
            valorOrdenacao.setText(Integer.toString(valor));
        } catch (Exception ex) {
            Logger.getLogger(Programa.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botaoTudoActionPerformed

    private void botaoTudo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoTudo1ActionPerformed
        // TODO add your handling code here:
        LineNumberReader linhaLeitura;
        try {
            linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int valor = linhaLeitura.getLineNumber();
            valorBusca.setText(Integer.toString(valor));
        } catch (Exception ex) {
            Logger.getLogger(Programa.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botaoTudo1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "buscaACII");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        try {
            int n = Integer.parseInt(jTextValorN.getText());
            if (n < 0) {
                Exception e = new Exception();
                throw e;
            } else {

                JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                executarOrdenacaoASCII(n);
                preencherTabelaASCII(n);
                cardLayout.show(jPanelPrincipal, "resultadoASCII");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Digite um valor válido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arquivoAberto");
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        abrirArquivo();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        this.arquivo = null;
        desativaMenu();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arquivoAberto");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "parte2");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void valorArvoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorArvoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorArvoresActionPerformed

    private void botaoTudo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoTudo2ActionPerformed
        // TODO add your handling code here:
        LineNumberReader linhaLeitura;
        try {
            linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int valor = linhaLeitura.getLineNumber();
            valorArvores.setText(Integer.toString(valor));
        } catch (Exception ex) {
            Logger.getLogger(Programa.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botaoTudo2ActionPerformed

    private void botaoComecar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoComecar2ActionPerformed
        // TODO add your handling code here:
        if (sementesArvores.isSelected()) {
            try {
                JOptionPane.showMessageDialog(null, "As árvores serão executadas.\n O programa poderá ficar travado até o termino da execução", "Info", JOptionPane.INFORMATION_MESSAGE);
                executarSementesOrdenacao();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                int qtdLinhas = Integer.parseInt(valorArvores.getText());

                if (qtdLinhas < 1) {
                    JOptionPane.showMessageDialog(null, "Digite um valor válido!", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {

                    if (qtdLinhas > 500000) {
                        int resposta = JOptionPane.showConfirmDialog(null, "Acima de 500000 linhas pode ocorrer erros por falta de memória.\nTem certeza que deseja executar?", "Confirmação", JOptionPane.YES_NO_OPTION);
                        if (resposta == JOptionPane.YES_OPTION) {
                            JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                            executarArvores(qtdLinhas);
                        } else {

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "A leitura do arquivo começou!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        executarArvores(qtdLinhas);

                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Digite um valor válido!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botaoComecar2ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "parte2");
    }//GEN-LAST:event_jButton28ActionPerformed

    private void radioArvoreCustomizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioArvoreCustomizadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioArvoreCustomizadoActionPerformed

    private void sementesArvoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sementesArvoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sementesArvoresActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "parteTrabalho");
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "parteTrabalho");
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arvore");
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(jPanelPrincipal, "arvore");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void preencherTabelaASCII(int n) {
        valorN.setText(jTextValorN.getText());
        float despesas = 0;
        AlgoritmoDeputado.mergeSort(listaDeputado, new Relatorio());
        AlgoritmoPartido.mergeSort(listaPartido);
        DefaultTableModel modelo = (DefaultTableModel) tabelaDeputadoMaiorGasto.getModel();
        DecimalFormat df = new DecimalFormat();
        df.applyPattern("#,##0.00");
        modelo.setRowCount(0);
        for (int i = 0; i < n; i++) {
            modelo.addRow(new Object[]{listaDeputado.retornaInfo(i).getNome(), listaDeputado.retornaInfo(i).getPartido(), df.format(listaDeputado.retornaInfo(i).getTotalGasto())});
        }

        modelo = (DefaultTableModel) tabelaDeputadoMenorGasto.getModel();
        modelo.setRowCount(0);
        for (int i = 1; i <= n; i++) {
            modelo.addRow(new Object[]{listaDeputado.retornaInfo(listaDeputado.getTamanho() - i).getNome(), listaDeputado.retornaInfo(listaDeputado.getTamanho() - i).getPartido(), df.format(listaDeputado.retornaInfo(listaDeputado.getTamanho() - i).getTotalGasto())});
        }

        modelo = (DefaultTableModel) tabelaPartidoMaiorGasto.getModel();
        modelo.setRowCount(0);
        for (int i = 0; i < n; i++) {
            modelo.addRow(new Object[]{listaPartido.retornaInfo(i).getNome(), df.format(listaDeputado.retornaInfo(i).getTotalGasto())});
        }

        modelo = (DefaultTableModel) tabelaPartidoMenorGasto.getModel();
        modelo.setRowCount(0);
        for (int i = 1; i <= n; i++) {
            modelo.addRow(new Object[]{listaPartido.retornaInfo(listaPartido.getTamanho() - i).getNome(), df.format(listaPartido.retornaInfo(listaPartido.getTamanho() - i).getTotalGasto())});
        }

        for (int i = 0; i < listaPartido.getTamanho(); i++) {
            despesas = despesas + listaPartido.retornaInfo(i).getTotalGasto();
        }
        df.applyPattern("R$ #,##0.00");
        valorTotalGasto.setText(df.format(despesas));

    }

    private void executarOrdenacaoASCII(int qtdLinhas) {
        listaDeputado.deletarLista();
        // faz o trabalho a ser medido

        try (FileInputStream fi = new FileInputStream(arquivo)) {
            //System.out.println("Tentando ler o arquivo");

            BufferedInputStream bis = new BufferedInputStream(fi);
            BufferedReader reader = new BufferedReader(new InputStreamReader(bis));
            String linha;

            //Saber a quantidade de linhas          
            LineNumberReader linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int totalLinhas = linhaLeitura.getLineNumber();

            //String
            String[] partes;
            String aux;

            while ((linha = reader.readLine()) != null) {
                linha = reader.readLine();
                aux = linha;
                partes = aux.split(";");
                preencherASCII(partes);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro inesperado!\n" + e, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void executarArvores(int qtdLinhas) {
        ArvoreAVL arvoreAVL = new ArvoreAVL();
        ArvoreSplay arvoreSplay = new ArvoreSplay();

        listaDeputado.deletarLista();
        int cont = 0;
        try (FileInputStream fi = new FileInputStream(arquivo)) {
            //System.out.println("Tentando ler o arquivo");

            BufferedInputStream bis = new BufferedInputStream(fi);
            BufferedReader reader = new BufferedReader(new InputStreamReader(bis));
            String linha = reader.readLine();

            //Saber a quantidade de linhas          
            LineNumberReader linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int totalLinhas = linhaLeitura.getLineNumber();

            //String
            String[] partes;
            String aux;

            if (botaoAleatorioArvore.isSelected()) {
                //linha = reader.readLine();
                List<Integer> numAleatorios = new ArrayList<>();
                for (int i = 1; i < totalLinhas; i++) {
                    numAleatorios.add(i);
                }
                Collections.shuffle(numAleatorios);
                numAleatorios = numAleatorios.subList(0, qtdLinhas);
                AlgoritmoDeputado.mergeSortInteiro(numAleatorios, 0, numAleatorios.size() - 1);
                int contadorLinhas = 1;

                for (int i = 0; i < qtdLinhas;) {

                    linha = reader.readLine();
                    if (contadorLinhas == numAleatorios.get(i)) {
                        String hora;
                        String data;
                        aux = linha;

                        partes = aux.split(";");
                        if (partes[0].equals("0")) {
                            String[] div = partes[1].split(" ");
                            data = div[0];
                            hora = div[1];

                        } else {
                            data = partes[1] + "-01-01";
                            hora = "00:00:00";
                        }

                   Chave chave = new Chave(data, hora, Integer.parseInt(partes[2]), partes[3], partes[4], partes[5], partes[6], partes[7], partes[8], Float.parseFloat(partes[9]));
                        if (radioArvoreAVL.isSelected()) {
                            arvoreAVL.inserir(i, chave);
                        } else if (radioArvoreVermelhoPreto.isSelected()) {

                        } else if (radioArvoreSplay.isSelected()) {
                            arvoreSplay.inserir(i, chave);
                        } else if (radioArvoreB.isSelected()) {

                        } else if (radioArvoreCustomizado.isSelected()) {

                        }
                        i++;
                    }
                    contadorLinhas++;
                }
            } else {

                for (int i = 0; i < qtdLinhas; i++) {

                    linha = reader.readLine();
                    aux = linha;
                    partes = aux.split(";");
                    String hora;
                    String data;
                    aux = linha;

                    partes = aux.split(";");
                    if (partes[0].equals("0")) {
                        String[] div = partes[1].split(" ");
                        data = div[0];
                        hora = div[1];

                    } else {
                        data = partes[1] + "-01-01";
                        hora = "00:00:00";
                    }


                    Chave chave = new Chave(data, hora, Integer.parseInt(partes[2]), partes[3], partes[4], partes[5], partes[6], partes[7], partes[8], Float.parseFloat(partes[9]));

                    if (radioArvoreAVL.isSelected()) {
                        arvoreAVL.inserir(i, chave);
                    } else if (radioArvoreVermelhoPreto.isSelected()) {

                    } else if (radioArvoreSplay.isSelected()) {
                        arvoreSplay.inserir(i, chave);
                    } else if (radioArvoreB.isSelected()) {

                    } else if (radioArvoreCustomizado.isSelected()) {

                    }

                }
            }

            cardLayout.show(jPanelPrincipal, "parte2");
        } catch (Exception e) {
            //System.out.println(cont);
            JOptionPane.showMessageDialog(this, "Erro inesperado!", "Erro", JOptionPane.ERROR_MESSAGE);
            if (cont == 0) {
                System.err.println("Erro ao ler o arquivo.");
            }
            if (cont < 3014904) {
                System.err.println("Erro ao ler o arquivo na linha " + cont);
            } else {

            }
        }
    }

    private void executarOrdenacao(int qtdLinhas) throws InterruptedException {
        listaDeputado.deletarLista();
        int cont = 0;

        long start = System.currentTimeMillis();
        // faz o trabalho a ser medido

        try (FileInputStream fi = new FileInputStream(arquivo)) {
            //System.out.println("Tentando ler o arquivo");

            BufferedInputStream bis = new BufferedInputStream(fi);
            BufferedReader reader = new BufferedReader(new InputStreamReader(bis));
            String linha = linha = reader.readLine();

            //Saber a quantidade de linhas          
            LineNumberReader linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int totalLinhas = linhaLeitura.getLineNumber();

            //String
            String[] partes;
            String aux;

            if (botaoAleatorioOrdenacao.isSelected()) {
                //linha = reader.readLine();
                List<Integer> numAleatorios = new ArrayList<>();
                for (int i = 1; i < totalLinhas; i++) {
                    numAleatorios.add(i);
                }
                Collections.shuffle(numAleatorios);
                numAleatorios = numAleatorios.subList(0, qtdLinhas);
                AlgoritmoDeputado.mergeSortInteiro(numAleatorios, 0, numAleatorios.size() - 1);
                int contadorLinhas = 1;

                for (int i = 0; i < qtdLinhas;) {

                    linha = reader.readLine();
                    if (contadorLinhas == numAleatorios.get(i)) {
                        aux = linha;

                        partes = aux.split(";");

                        preencherDeputados(partes);
                        i++;
                    }
                    contadorLinhas++;
                }
            } else {

                for (int i = 1; i < qtdLinhas; i++) {

                    linha = reader.readLine();
                    aux = linha;
                    partes = aux.split(";");

                    preencherDeputados(partes);

                }
            }
            progressoStatus.setText("Ordenando a lista");
            barraProgresso.setValue(50);
            ordenarDeputados();
            cardLayout.show(jPanelPrincipal, "resultadoOrdenacao");
            preencherTabelaOrdenacao();
        } catch (Exception e) {
            //System.out.println(cont);
            JOptionPane.showMessageDialog(this, "Erro inesperado!", "Erro", JOptionPane.ERROR_MESSAGE);
            if (cont == 0) {
                System.err.println("Erro ao ler o arquivo.");
            }
            if (cont < 3014904) {
                System.err.println("Erro ao ler o arquivo na linha " + cont);
            } else {
                long elapsed = System.currentTimeMillis() - start;
            }
        }
    }

    private void ordenarDeputados() throws IOException {
        String tipoExecucao;
        String quantidade;
        if (botaoLinearOrdenacao.isSelected()) {
            tipoExecucao = "Linear";
        } else {
            tipoExecucao = "Aleatório";
        }

        Relatorio relatorio = new Relatorio(Integer.parseInt(valorOrdenacao.getText()), "Customizado", tipoExecucao, "Deputados");
        String descricao = "";
        if (radioBubble.isSelected()) {
            AlgoritmoDeputado.bubbleSortDeputados(listaDeputado, relatorio);
            descricao = radioBubble.getText();
        } else if (radioInsertion.isSelected()) {
            AlgoritmoDeputado.insertionSort(listaDeputado, relatorio);
            descricao = radioInsertion.getText();
        } else if (radioQuick1.isSelected()) {
            AlgoritmoDeputado.quickSortRec(listaDeputado, relatorio);
            descricao = radioQuick1.getText();
        } else if (radioQuick2.isSelected()) {
            quantidade = JOptionPane.showInputDialog(null, "Digite o valor de k para calcular a mediana:", "Digite um valor", JOptionPane.QUESTION_MESSAGE);
            relatorio = new Relatorio(Integer.parseInt(valorOrdenacao.getText()), "Customizado", tipoExecucao, "Deputados");
            AlgoritmoDeputado.quicksortMedianaK(listaDeputado, Integer.parseInt(quantidade), relatorio);
            descricao = radioQuick2.getText() + quantidade;
        } else if (radioQuick3.isSelected()) {
            quantidade = JOptionPane.showInputDialog(null, "Digite o valor de k para executar o Insertion Sort:", "Digite um valor", JOptionPane.QUESTION_MESSAGE);
            relatorio = new Relatorio(Integer.parseInt(valorOrdenacao.getText()), "Customizado", tipoExecucao, "Deputados");
            AlgoritmoDeputado.quickSortHibrido(listaDeputado, Integer.parseInt(quantidade), relatorio);
            descricao = radioQuick3.getText() + quantidade;
        } else if (radioMerge.isSelected()) {
            AlgoritmoDeputado.mergeSort(listaDeputado, relatorio);
            descricao = radioMerge.getText();
        } else if (radioHeap.isSelected()) {
            AlgoritmoDeputado.heapSort(listaDeputado, relatorio);
            descricao = radioHeap.getText();
        } else if (radioShell.isSelected()) {
            AlgoritmoDeputado.shellSort(listaDeputado, relatorio);
            descricao = radioShell.getText();
        }
        relatorio.setDescricao(descricao);

        relatorio.setRelatorioFinal("Ordenacao");
    }

    private void preencherDeputados(String[] partes) {
        Deputado deputado = new Deputado(partes[5], partes[3], partes[4], Integer.parseInt(partes[2]));
        Recibo recibo = new Recibo(partes[8], partes[6], partes[7], Float.parseFloat(partes[9]));

        //Preenchendo a hora no recibo
        if (partes[0].equals("0")) {
            String[] div = partes[1].split(" ");
            recibo.setData(div[0]);
            recibo.setHora(div[1]);

        } else if (partes[0].equals("1")) {
            recibo.setData(partes[1] + "-01-01");
            recibo.setHora("00:00:00");
        }

        //variaveis auxiliares
        //Se o deputado não estiver na lista, adiciona
        if (listaDeputado.getTamanho() == 0) {
            deputado.addRecibo(recibo);
            deputado.setTotalGasto((deputado.getTotalGasto() + Float.parseFloat(partes[9])));
            listaDeputado.insereFinal(deputado);
        } else if (listaDeputado.retornaFim().getId() == deputado.getId()) {
            listaDeputado.retornaFim().addRecibo(recibo);
            listaDeputado.retornaFim().setTotalGasto((listaDeputado.retornaFim().getTotalGasto() + Float.parseFloat(partes[9])));
        } else {
            int indexDeputado = retornaIndexDeputado(deputado);
            if (indexDeputado == listaDeputado.getTamanho()) {
                deputado.addRecibo(recibo);
                deputado.setTotalGasto((deputado.getTotalGasto() + Float.parseFloat(partes[9])));
                listaDeputado.insereFinal(deputado);
            } else {
                listaDeputado.retornaInfo(indexDeputado).addRecibo(recibo);
                listaDeputado.retornaInfo(indexDeputado).setTotalGasto((listaDeputado.retornaFim().getTotalGasto() + Float.parseFloat(partes[9])));
                listaDeputado.troca(indexDeputado, listaDeputado.getTamanho() - 1);
            }
        }

    }

    private void preencherASCII(String[] partes) {
        Deputado deputado = new Deputado(partes[5], partes[3], partes[4], Integer.parseInt(partes[2]));
        Partido partido = new Partido();
        partido.setNome(partes[3]);
        //variaveis auxiliares
        //Se o deputado não estiver na lista, adiciona
        if (listaDeputado.getTamanho() == 0) {
            deputado.setTotalGasto((deputado.getTotalGasto() + Float.parseFloat(partes[9])));
            listaDeputado.insereFinal(deputado);
        } else if (listaDeputado.retornaFim().getId() == deputado.getId()) {
            listaDeputado.retornaFim().setTotalGasto((listaDeputado.retornaFim().getTotalGasto() + Float.parseFloat(partes[9])));
        } else {
            int indexDeputado = retornaIndexDeputado(deputado);
            if (indexDeputado == listaDeputado.getTamanho()) {
                deputado.setTotalGasto((deputado.getTotalGasto() + Float.parseFloat(partes[9])));
                listaDeputado.insereFinal(deputado);
            } else {
                listaDeputado.retornaInfo(indexDeputado).setTotalGasto((listaDeputado.retornaFim().getTotalGasto() + Float.parseFloat(partes[9])));
                listaDeputado.troca(indexDeputado, listaDeputado.getTamanho() - 1);
            }
        }
        //verifica se partido está na lista e adiciona
        if (listaPartido.getTamanho() == 0) {
            partido.setTotalGasto((partido.getTotalGasto() + Float.parseFloat(partes[9])));
            listaPartido.insereFinal(partido);
        } else if (listaPartido.retornaFim().getNome().equalsIgnoreCase(partido.getNome())) {
            listaPartido.retornaFim().setTotalGasto((listaPartido.retornaFim().getTotalGasto() + Float.parseFloat(partes[9])));
        } else {
            int indexPartido = retornaIndexPartido(partido);
            if (indexPartido == listaPartido.getTamanho()) {
                partido.setTotalGasto((partido.getTotalGasto() + Float.parseFloat(partes[9])));
                listaPartido.insereFinal(partido);
            } else {
                listaPartido.retornaInfo(indexPartido).setTotalGasto((listaPartido.retornaFim().getTotalGasto() + Float.parseFloat(partes[9])));
                listaPartido.troca(indexPartido, listaPartido.getTamanho() - 1);
            }
        }

    }

    private int retornaIndexDeputado(Deputado deputado) {
        for (int i = 0; i < listaDeputado.getTamanho(); i++) {
            if (listaDeputado.retornaInfo(i).getId() == deputado.getId()) {
                return i;
            }
        }
        return listaDeputado.getTamanho();
    }

    private int retornaIndexPartido(Partido partido) {
        for (int i = 0; i < listaPartido.getTamanho(); i++) {
            if (listaPartido.retornaInfo(i).getNome().equalsIgnoreCase(partido.getNome())) {
                return i;
            }
        }
        return listaPartido.getTamanho();
    }

    private void executarSementesOrdenacao() {
        int semente;
        //N=1000, 5000, 10000, 50000, 100000 e 500000, 1000000.
        try {
            for (semente = 1; semente <= 10; semente++) {
                leDadosAleatorios(1000);
                ordenaSementesDeputado(semente, 1000);

                leDadosAleatorios(5000);
                ordenaSementesDeputado(semente, 5000);

                leDadosAleatorios(10000);
                ordenaSementesDeputado(semente, 10000);

                leDadosAleatorios(50000);
                ordenaSementesDeputado(semente, 50000);

                leDadosAleatorios(100000);
                ordenaSementesDeputado(semente, 100000);

                leDadosAleatorios(500000);
                ordenaSementesDeputado(semente, 500000);

                leDadosAleatorios(1000000);
                ordenaSementesDeputado(semente, 1000000);
            }
            JOptionPane.showMessageDialog(null, "Execução completa, o relatório foi gerado, voltando ao inicio", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        } finally {
            cardLayout.show(jPanelPrincipal, "arquivoAberto");
        }

    }

    public void leDadosAleatorios(int qtdLinhas) {
        listaDeputado.deletarLista();

        // faz o trabalho a ser medido
        try (FileInputStream fi = new FileInputStream(arquivo)) {
            //System.out.println("Tentando ler o arquivo");

            BufferedInputStream bis = new BufferedInputStream(fi);
            BufferedReader reader = new BufferedReader(new InputStreamReader(bis));
            String linha = reader.readLine();

            //Saber a quantidade de linhas          
            LineNumberReader linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int totalLinhas = linhaLeitura.getLineNumber();

            //String
            String[] partes;
            String aux;

            //linha = reader.readLine();
            List<Integer> numAleatorios = new ArrayList<>();
            for (int i = 1; i < totalLinhas; i++) {
                numAleatorios.add(i);
            }
            Collections.shuffle(numAleatorios);
            numAleatorios = numAleatorios.subList(0, qtdLinhas);
            AlgoritmoDeputado.mergeSortInteiro(numAleatorios, 0, numAleatorios.size() - 1);
            int contadorLinhas = 1;

            for (int i = 0; i < qtdLinhas;) {

                linha = reader.readLine();

                if (contadorLinhas == numAleatorios.get(i)) {
                    aux = linha;
                    partes = aux.split(";");
                    preencherDeputados(partes);

                    i++;
                }
                contadorLinhas++;
            }
            reader.close();
            bis.close();
            fi.close();
        } catch (Exception e) {
            System.out.println("Erro!");
        }

    }

    public void ordenaSementesDeputado(int semente, int linhas) {
        ListaEncadeada<Deputado> aux = new ListaEncadeada<>();
        ListaEncadeada<Integer> listaInteira = new ListaEncadeada();
        Relatorio relatorio;
        //----------Bubble Sort-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            //Ordena bubbleSort
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.bubbleSortDeputados(aux, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Bubble Sort", semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.bubbleSort(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Bubble Sort", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no BubbleSort Semente" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        //----------Insertion Sort-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.insertionSort(aux, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Insertion Sort", semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.insertionSort(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Insertion Sort", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no InsertionSort Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        //----------Merge Sort-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.mergeSort(aux, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Merge Sort", semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.mergeSort(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Merge Sort", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no MergeSort Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Heap Sort-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.heapSort(aux, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Heap Sort", semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.heapSort(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Heap Sort", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no HeapSort Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Shell Sort-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.shellSort(aux, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Shell Sort", semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.shellSort(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Shell Sort", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no ShellSort Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort Recursivo-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quickSortRec(aux, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Recursivo", semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quickSortRec(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Recursivo", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuickSortRecursivo Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort MedianaK3-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quicksortMedianaK(aux, 3, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Mediana de " + 3, semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quicksortMedianaK(listaInteira, 3, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Mediana de 3", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuickSortMediana3 Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort MedianaK-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quicksortMedianaK(aux, 5, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Mediana de " + 5, semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quicksortMedianaK(listaInteira, 5, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Mediana de 5", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuicksortMediana5 Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort MedianaK-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quicksortMedianaK(aux, 7, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Mediana de " + 7, semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quicksortMedianaK(listaInteira, 7, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Mediana de 7", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuickSortMediana7 Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort Hibrido-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quickSortHibrido(aux, 10, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Hibrido k" + 10, semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quickSortHibrido(listaInteira, 10, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Hibrido k" + 10, semente);

            aux.deletarLista();
            listaInteira.deletarLista();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuickSortHibrido10 Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort Hibrido-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quickSortHibrido(aux, 100, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Hibrido k" + 100, semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quickSortHibrido(listaInteira, 100, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Hibrido k" + 100, semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuickSOrtHibrido100 Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Quick Sort Hibrido-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.quickSortHibrido(aux, 1000, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Hibrido k" + 1000, semente);

            relatorio = new Relatorio(linhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.quickSortHibrido(listaInteira, 1000, relatorio);
            relatorio.setRelatorioFinal("Ordenacao", "Quick Sort Hibrido k" + 1000, semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no QuickSortHibrido200 Semente:" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void executarHash(int qtdLinhas) {
        listaDeputado.deletarLista();
        int cont = 0;
        long start = System.currentTimeMillis();
        // faz o trabalho a ser medido
        try (FileInputStream fi = new FileInputStream(arquivo)) {

            BufferedInputStream bis = new BufferedInputStream(fi);
            BufferedReader reader = new BufferedReader(new InputStreamReader(bis));
            String linha = linha = reader.readLine();

            //Saber a quantidade de linhas          
            LineNumberReader linhaLeitura = new LineNumberReader(new FileReader(arquivo));
            linhaLeitura.skip(arquivo.length());
            int totalLinhas = linhaLeitura.getLineNumber();

            //String
            String[] partes;
            String aux;

            if (botaoAleatorioBusca.isSelected()) {
                //linha = reader.readLine();
                List<Integer> numAleatorios = new ArrayList<>();
                for (int i = 1; i < totalLinhas; i++) {
                    numAleatorios.add(i);
                }
                Collections.shuffle(numAleatorios);
                numAleatorios = numAleatorios.subList(0, qtdLinhas);
                AlgoritmoDeputado.mergeSortInteiro(numAleatorios, 0, numAleatorios.size() - 1);
                int contadorLinhas = 1;

                for (int i = 0; i < qtdLinhas;) {

                    linha = reader.readLine();
                    if (contadorLinhas == numAleatorios.get(i)) {
                        aux = linha;

                        partes = aux.split(";");

                        preencherDeputados(partes);
                        i++;
                    }
                    contadorLinhas++;
                }
            } else {

                for (int i = 1; i < qtdLinhas; i++) {

                    linha = reader.readLine();
                    aux = linha;
                    partes = aux.split(";");

                    preencherDeputados(partes);

                }
            }
            buscaDeputados();
            JOptionPane.showMessageDialog(null, "Execução terminada!\nVoltando ao início.", "Info", JOptionPane.INFORMATION_MESSAGE);
            cardLayout.show(jPanelPrincipal, "arquivoAberto");

        } catch (Exception e) {
            //System.out.println(cont);
            JOptionPane.showMessageDialog(null, "Erro inesperado!", "Erro", JOptionPane.ERROR_MESSAGE);
            if (cont == 0) {
                System.err.println("Erro ao ler o arquivo.");
            }
            if (cont < 3014904) {
                System.err.println("Erro ao ler o arquivo na linha " + cont);
            } else {
                long elapsed = System.currentTimeMillis() - start;
            }
        }
    }

    private void buscaDeputados() {
        try {
            String tipoExecucao;
            String quantidade;
            if (botaoLinearOrdenacao.isSelected()) {
                tipoExecucao = "Linear";
            } else {
                tipoExecucao = "Aleatório";
            }

            Relatorio relatorio = new Relatorio(Integer.parseInt(valorBusca.getText()), "Customizado", tipoExecucao, "Deputados");
            String descricao = "";

            if (radioSondagemLinear.isSelected()) {
                AlgoritmoDeputado.sondagemLinear(listaDeputado, relatorio);
                descricao = radioSondagemLinear.getText();
            } else if (radioSondagemQuadratica.isSelected()) {
                AlgoritmoDeputado.sondagemQuadratica(listaDeputado, relatorio);
                descricao = radioSondagemQuadratica.getText();
            } else if (radioDuploHash.isSelected()) {
                AlgoritmoDeputado.duploHashing(listaDeputado, relatorio);
                descricao = radioDuploHash.getText();
            } else if (radioEncadeamentoSeparado.isSelected()) {
                AlgoritmoDeputado.encadeamentoSeparado(listaDeputado, relatorio);
                descricao = radioEncadeamentoSeparado.getText();
            } else if (radioEncadeamentoCoalescido.isSelected()) {
                AlgoritmoDeputado.encadeamentoCoalescido(listaDeputado, relatorio);
                descricao = radioEncadeamentoCoalescido.getText();
            }
            relatorio.setDescricao(descricao);

            relatorio.setRelatorioFinal("Busca");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao executar o Hash.\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void executarBuscaSementesDeputado() {
        int semente;
        //N=1000, 5000, 10000, 50000, 100000 e 500000, 1000000.
        try {
            for (semente = 1; semente <= 10; semente++) {
                leDadosAleatorios(1000);
                buscaSementeDeputado(semente, 1000);

                leDadosAleatorios(5000);
                buscaSementeDeputado(semente, 5000);

                leDadosAleatorios(10000);
                buscaSementeDeputado(semente, 10000);

                leDadosAleatorios(50000);
                buscaSementeDeputado(semente, 50000);

                leDadosAleatorios(100000);
                buscaSementeDeputado(semente, 100000);

                leDadosAleatorios(500000);
                buscaSementeDeputado(semente, 500000);

                leDadosAleatorios(1000000);
                buscaSementeDeputado(semente, 1000000);
            }
            JOptionPane.showMessageDialog(null, "Execução completa, o relatório foi gerado, voltando ao inicio", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        } finally {
            cardLayout.show(jPanelPrincipal, "arquivoAberto");
        }

    }

    public void buscaSementeDeputado(int semente, int qtdLinhas) {
        ListaEncadeada<Deputado> aux = new ListaEncadeada<>();
        ListaEncadeada<Integer> listaInteira = new ListaEncadeada();
        Relatorio relatorio;
        //----------Sondagem Linear-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.sondagemLinear(aux, relatorio);
            relatorio.setRelatorioFinal("Busca", "Sondagem Linear", semente);

            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.sondagemLinear(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Busca", "Sondagem Linear", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na Sondagem Linear, Semente" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Sondagem Quadratica-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.sondagemQuadratica(aux, relatorio);
            relatorio.setRelatorioFinal("Busca", "Sondagem Quadratica", semente);

            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.sondagemQuadratica(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Busca", "Sondagem Quadratica", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na Sondagem Quadratica, Semente" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Duplo Hash-------------

        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.duploHashing(aux, relatorio);
            relatorio.setRelatorioFinal("Busca", "Duplo Hash", semente);

            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.duploHashing(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Busca", "Duplo Hash", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no Duplo Hash, Semente" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Encadeamento Separado-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.encadeamentoSeparado(aux, relatorio);
            relatorio.setRelatorioFinal("Busca", "Encadeamento Separado", semente);

            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.encadeamentoSeparado(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Busca", "Encadeamento Separado", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no Encadeamento Separado, Semente" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        //----------Encadeamento Coalescido-------------
        try {
            for (int i = 0; i < listaDeputado.getTamanho(); i++) {
                aux.insereFinal(listaDeputado.retornaInfo(i));
                listaInteira.insereFinal(aux.retornaFim().getId());
            }
            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Deputados");
            AlgoritmoDeputado.encadeamentoCoalescido(aux, relatorio);
            relatorio.setRelatorioFinal("Busca", "Encadeamento Coalescido", semente);

            relatorio = new Relatorio(qtdLinhas, "Sementes", "Aleatoria", "Inteiro");
            AlgoritmoInteiro.encadeamentoCoalescido(listaInteira, relatorio);
            relatorio.setRelatorioFinal("Busca", "Encadeamento Coalescido", semente);

            aux.deletarLista();
            listaInteira.deletarLista();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no Encadeamento Coalescido, Semente" + semente + "\n" + e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            /*
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                 if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* */

 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Programa().setVisible(true);
            }
        });
    }

    public void abrirArquivo() {
        FileFilter filter = new FileNameExtensionFilter("Arquivos de texto: txt, csv", "txt", "csv");
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setAcceptAllFileFilterUsed(false);

        int returnVal = fileChooser.showOpenDialog(this);
        fileChooser.setMultiSelectionEnabled(false);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File arquivo = fileChooser.getSelectedFile();
            try (FileInputStream fi = new FileInputStream(arquivo)) {
                // What to do with the file, e.g. display it in a TextArea
                String cabecalho = "bugged_date;receipt_date;deputy_id;political_party;state_code;deputy_name;receipt_social_security_number;receipt_description;establishment_name;receipt_value";
                BufferedInputStream bis = new BufferedInputStream(fi);
                BufferedReader reader = new BufferedReader(new InputStreamReader(bis));

                String linha = linha = reader.readLine();
                if (linha.equals(cabecalho)) {
                    this.arquivo = arquivo;
                    nomeArquivoStatus.setText("Nome do arquivo:");
                    nomeArquivo.setText(arquivo.getName());
                    ativaMenu();
                    cardLayout.show(jPanelPrincipal, "parteTrabalho");
                    jLabelNomeArquivo1.setText(nomeArquivo.getText());
                    jLabelNomeArquivo2.setText(nomeArquivo.getText());
                    jLabelNomeArquivo3.setText(nomeArquivo.getText());
                    JOptionPane.showMessageDialog(this, "Arquivo executado com sucesso!", "Abrir", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao abrir o arquivo!", "Abrir", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Falha ao abrir o arquivo!", "Abrir", JOptionPane.ERROR_MESSAGE);
            }
        } else {

        }
    }

    public void ativaMenu() {
        menuArquivoFechar.setEnabled(true);
        menuAlgoritmos.setEnabled(true);
    }

    public void desativaMenu() {
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja fechar o arquivo?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            menuArquivoFechar.setEnabled(false);
            menuAlgoritmos.setEnabled(false);
            nomeArquivoStatus.setText("Nenhum arquivo aberto");
            nomeArquivo.setText("");
            cardLayout.show(jPanelPrincipal, "inicio");
        } else {

        }
    }

    private void alteraEstadoOrdenacao(boolean valor) {
        botaoLinearOrdenacao.setEnabled(valor);
        botaoAleatorioOrdenacao.setEnabled(valor);
        botaoTudo.setEnabled(valor);
        radioBubble.setEnabled(valor);
        radioHeap.setEnabled(valor);
        radioInsertion.setEnabled(valor);
        radioMerge.setEnabled(valor);
        radioQuick1.setEnabled(valor);
        radioQuick2.setEnabled(valor);
        radioQuick3.setEnabled(valor);
        radioShell.setEnabled(valor);
    }

    private void alteraBarraProgresso(int valor) {
        barraProgresso.setValue(valor);
    }

    private void preencherTabelaOrdenacao() {
        labelQuantidadeDeputado.setText(Integer.toString(listaDeputado.getTamanho()));
        DefaultTableModel modelo = (DefaultTableModel) tabelaDeputados.getModel();
        double despesas = 0;
        DecimalFormat df = new DecimalFormat();
        df.applyPattern("#,##0.00");
        modelo.setRowCount(0);
        for (int i = 0; i < listaDeputado.getTamanho(); i++) {
            despesas += listaDeputado.retornaInfo(i).getTotalGasto();
            modelo.addRow(new Object[]{listaDeputado.retornaInfo(i).getNome(), listaDeputado.retornaInfo(i).getPartido(), df.format(listaDeputado.retornaInfo(i).getTotalGasto())});
        }

        df.applyPattern("R$ #,##0.00");

        labelDespesasTotais.setText(df.format(despesas));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgresso;
    private javax.swing.JPanel barraStatus;
    private javax.swing.JRadioButton botaoAleatorioArvore;
    private javax.swing.JRadioButton botaoAleatorioBusca;
    private javax.swing.JRadioButton botaoAleatorioOrdenacao;
    private javax.swing.JButton botaoComecar;
    private javax.swing.JButton botaoComecar1;
    private javax.swing.JButton botaoComecar2;
    private javax.swing.JRadioButton botaoDeputadoOrdenacao;
    private javax.swing.JRadioButton botaoDeputadoOrdenacao2;
    private javax.swing.JRadioButton botaoLinearArvore;
    private javax.swing.JRadioButton botaoLinearBusca;
    private javax.swing.JRadioButton botaoLinearOrdenacao;
    private javax.swing.JRadioButton botaoPartidoOrdenacao2;
    private javax.swing.JButton botaoTudo;
    private javax.swing.JButton botaoTudo1;
    private javax.swing.JButton botaoTudo2;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.ButtonGroup grupoAlgoritmo;
    private javax.swing.ButtonGroup grupoArvoreArvores;
    private javax.swing.ButtonGroup grupoArvoreLinha;
    private javax.swing.ButtonGroup grupoArvoreMetodo;
    private javax.swing.ButtonGroup grupoHash;
    private javax.swing.ButtonGroup grupoHashMetodo;
    private javax.swing.ButtonGroup grupoHashQuantidade;
    private javax.swing.ButtonGroup grupoHashTipo;
    private javax.swing.ButtonGroup grupoMetodo;
    private javax.swing.ButtonGroup grupoQuantidade;
    private javax.swing.ButtonGroup grupoTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelNomeArquivo1;
    private javax.swing.JLabel jLabelNomeArquivo2;
    private javax.swing.JLabel jLabelNomeArquivo3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel333;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelArquivoAberto;
    private javax.swing.JPanel jPanelArvore;
    private javax.swing.JPanel jPanelBusca;
    private javax.swing.JPanel jPanelBuscaACII;
    private javax.swing.JPanel jPanelExecutando;
    private javax.swing.JPanel jPanelInicio;
    private javax.swing.JPanel jPanelOrdenacao;
    private javax.swing.JPanel jPanelParte2;
    private javax.swing.JPanel jPanelParteTrabalho;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelRelatorioOrdenacao;
    private javax.swing.JPanel jPanelResultado;
    private javax.swing.JPanel jPanelResultadoASCII;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextField jTextValorN;
    private javax.swing.JLabel labelDespesasTotais;
    private javax.swing.JLabel labelQuantidadeDeputado;
    private javax.swing.JMenu menuAlgoritmos;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuItem menuArquivoAbrir;
    private javax.swing.JMenuItem menuArquivoFechar;
    private javax.swing.JMenuItem menuArquivoSair;
    private javax.swing.JMenuItem menuBusca;
    private javax.swing.JMenuItem menuOrdenacao;
    private javax.swing.JMenu menuRelatorio;
    private javax.swing.JLabel nomeArquivo;
    private javax.swing.JLabel nomeArquivoStatus;
    private javax.swing.JLabel progressoStatus;
    private javax.swing.JRadioButton radioArvoreAVL;
    private javax.swing.JRadioButton radioArvoreB;
    private javax.swing.JRadioButton radioArvoreCustomizado;
    private javax.swing.JRadioButton radioArvoreSplay;
    private javax.swing.JRadioButton radioArvoreVermelhoPreto;
    private javax.swing.JRadioButton radioBubble;
    private javax.swing.JRadioButton radioBuscaSemente;
    private javax.swing.JRadioButton radioDuploHash;
    private javax.swing.JRadioButton radioEncadeamentoCoalescido;
    private javax.swing.JRadioButton radioEncadeamentoSeparado;
    private javax.swing.JRadioButton radioHeap;
    private javax.swing.JRadioButton radioInsertion;
    private javax.swing.JRadioButton radioMerge;
    private javax.swing.JRadioButton radioQuick1;
    private javax.swing.JRadioButton radioQuick2;
    private javax.swing.JRadioButton radioQuick3;
    private javax.swing.JRadioButton radioQuick6;
    private javax.swing.JRadioButton radioRelatorioOrdenacaoDeputadoCustomizado;
    private javax.swing.JRadioButton radioShell;
    private javax.swing.JRadioButton radioSondagemLinear;
    private javax.swing.JRadioButton radioSondagemQuadratica;
    private javax.swing.JRadioButton sementesArvores;
    private javax.swing.JRadioButton sementesOrdenacao;
    private javax.swing.JTable tabelaDeputadoMaiorGasto;
    private javax.swing.JTable tabelaDeputadoMenorGasto;
    private javax.swing.JTable tabelaDeputados;
    private javax.swing.JTable tabelaPartidoMaiorGasto;
    private javax.swing.JTable tabelaPartidoMenorGasto;
    private javax.swing.JTable tabelaRelatorioOrdenacao;
    private javax.swing.JTextField valorArvores;
    private javax.swing.JTextField valorBusca;
    private javax.swing.JLabel valorN;
    private javax.swing.JTextField valorOrdenacao;
    private javax.swing.JLabel valorTotalGasto;
    // End of variables declaration//GEN-END:variables
}
